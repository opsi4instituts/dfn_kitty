; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductId$)

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $ProductName$ + " found in registry. Nothing to do"
	EndCase
	Case "1"
		Message "Uninstalling " + $ProductName$ + " 32 Bit..."
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))
		Set $UninstallDir$ = GetRegistryValue($RegId$, "InstallLocation", $RegBitScope$)
		Files_uninstall
		Registry_uninstall /32Bit
		LinkFolder_uninstall_programs

		if $DesktopLink$ = "True"
			comment "Delete common desktop link"
			Linkfolder_delete_desktoplink	
		endif

		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
	EndCase
	DefaultCase
		logError "Found more than one installation! This case is not intended yet in this script! Stop now."
		isFatalError
	EndCase
EndSwitch                    

[Files_uninstall]
delete -sf $UnInstallDir$

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$
	
[LinkFolder_uninstall_programs]
set_basefolder common_startmenu
delete_subfolder "Programs\$ProductName$"
	
[Registry_uninstall]
deletekey [$RegPathUninstall$\$ProductId$]
